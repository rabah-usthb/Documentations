
SQL> create or replace trigger notActorANDRealisateur
  2  before insert on rolefilm
  3  begin
  4  select rf.idacteur from rolefilm rf inner join film f on
  5  f.film = rf.film where :new.idacteur = f.idrealisateur ;
  6  raise_application_error(-20001,:new.idacteur||' can''t be actor and realisator at the same time');
  7  exception
  8  when no_data_found then
  9  dbms_output.put_line('Insertion Successfull');
 10  end;
 11  /
before insert on rolefilm
                 *
ERROR at line 2:
ORA-04082: NEW or OLD references not allowed in table level triggers 


SQL> create or replace trigger notActorANDRealisateur
  2  before insert on rolefilm
  3  for each row
  4  begin
  5  select rf.idacteur from rolefilm rf inner join film f on
  6  f.film = rf.film where :new.idacteur = f.idrealisateur ;
  7  raise_application_error(-20001,:new.idacteur||' can''t be actor and realisator at the same time');
  8  exception
  9  when no_data_found then
 10  dbms_output.put_line('Insertion Successfull');
 11  end;
 12  /

Warning: Trigger created with compilation errors.

SQL> create or replace trigger notActorANDRealisateur
  2  before insert on rolefilm
  3  for each row
  4  begin
  5  select rf.idacteur from rolefilm rf inner join film f on
  6  f.idfilm = rf.idfilm where :new.idacteur = f.idrealisateur ;
  7  raise_application_error(-20001,:new.idacteur||' can''t be actor and realisator at the same time');
  8  exception
  9  when no_data_found then
 10  dbms_output.put_line('Insertion Successfull');
 11  end;
 12  /

Warning: Trigger created with compilation errors.

SQL> create or replace trigger notActorANDRealisateur
  2  before insert on rolefilm
  3  for each row
  4  declare
  5  exist number := 0;
  6  begin
  7  select count(*) into exist from rolefilm rf inner join film f on
  8  f.idfilm = rf.idfilm where :new.idacteur = f.idrealisateur ;
  9  if exist = 1 then
 10  raise_application_error(-20001,:new.idacteur||' can''t be actor and realisator at the same time');
 11  end if;
 12  exception
 13  when no_data_found then
 14  dbms_output.put_line('Insertion Successfull');
 15  end;
 16  /

Trigger created.

SQL> spool off;
